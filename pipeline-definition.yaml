---
AWSTemplateFormatVersion: '2010-09-09'
Description: The Wort Pipeline
Parameters:
  GitHubToken:
    NoEcho: 'true'
    Type: String
    Description: Secret. It might look something like 9b189a1654643522561f7b3ebd44a1531a4287af
      OAuthToken with access to Repo. Go to https://github.com/settings/tokens
  GitHubUser:
    Type: String
    Description: GitHub UserName
    Default: krwenholz
  Repo:
    Type: String
    Description: GitHub Repo to pull from. Only the Name. not the URL
    Default: wort
  Branch:
    Type: String
    Description: Branch to use from Repo. Only the Name. not the URL
    Default: master
Resources:
# TODO: define a stack to use stack.yaml
# CodeDeploySimpleStack:
#   Type: AWS::CloudFormation::Stack
#   Properties:
#     TemplateURL: https://s3.amazonaws.com/stelligent-public/cloudformation-templates/github/labs/codepipeline/codedeploy-deployment.json
#     TimeoutInMinutes: '60'
#     Parameters:
#       # RoleArn:
#       # RoFn::GetAtt:
#       # Ro- CodeDeployEC2InstancesStack
#       # Ro- Outputs.CodeDeployTrustRoleARN
#       Bucket:
#         Ref: ArtifactStoreBucket
#       Key:
#         Ref: stack.yaml
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      ManagedPolicyArns:
      # TODO: create policy resources separately and then attach them here
      - arn:aws:iam::aws:policy/AdministratorAccess
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
          Action: sts:AssumeRole

  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      AccessControl: BucketOwnerFullControl

  AppPipeline:
    DependsOn:
    - PipelineRole
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt PipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location:
          Ref: ArtifactStoreBucket
      Stages:
      - Name: Source
        Actions:
        - InputArtifacts: []
          Name: Source
          ActionTypeId:
            Category: Source
            Owner: ThirdParty
            Version: '1'
            Provider: GitHub
          OutputArtifacts:
          - Name: source_output
          Configuration:
            Owner: !Ref GitHubUser
            Repo: !Ref Repo
            Branch: !Ref Branch
            OAuthToken: !Ref GitHubToken
          RunOrder: 1
      - Name: Build
        Actions:
        - Name: Build
          ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: 1
          InputArtifacts:
          - Name: source_output
          OutputArtifacts:
          - Name: build_output
          Configuration:
            ProjectName: !Ref BuildProject
          RunOrder: 1

  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      TimeoutInMinutes: 10
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: clojure:latest
        Type: LINUX_CONTAINER
      Name: !Sub ${AWS::StackName}BuildProject
      ServiceRole: !Ref BuildRole
      Source:
        Type: CODEPIPELINE

  BuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
# TODO: deploy said stack in pipeline
#     - Name: Production
#       Actions:
#       - Name: PromoteEnvironment
#         ActionTypeId:
#           Category: Deploy
#           Owner: AWS
#           Version: '1'
#           Provider: CloudFormation
#         InputArtifacts:
#         - Name: build_output
#         OutputArtifacts: []
#         Configuration:
#           ProjectName: drom-promote-env
#         RunOrder: 1
#     ArtifactStore:
#       Type: S3
#       Location:
#         Ref: ArtifactStoreBucket
Outputs:
  CodePipelineURL:
    Value:
      Fn::Join:
      - ''
      - - https://console.aws.amazon.com/codepipeline/home?region=
        - Ref: AWS::Region
        - "#/view/"
        - Ref: AppPipeline


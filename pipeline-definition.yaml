---
AWSTemplateFormatVersion: '2010-09-09'
Description: The Wort Pipeline
Parameters:
  ArtifactStoreBucket:
    Type: String
    Description: S3 bucket to use for artifacts. Just bucket Name; not URL. IAM user
      should have access to the bucket.
    Default: my-test-dump
  SourceOutputArtifacts:
    Type: String
    Description: A name for our source output artifacts.
    Default: source-output
  GitHubToken:
    NoEcho: 'true'
    Type: String
    Description: Secret. It might look something like 9b189a1654643522561f7b3ebd44a1531a4287af
      OAuthToken with access to Repo. Go to https://github.com/settings/tokens
  GitHubUser:
    Type: String
    Description: GitHub UserName
    Default: krwenholz
  Repo:
    Type: String
    Description: GitHub Repo to pull from. Only the Name. not the URL
    Default: wort
  Branch:
    Type: String
    Description: Branch to use from Repo. Only the Name. not the URL
    Default: master
Resources:
# TODO: define a stack to use stack.yaml
# CodeDeploySimpleStack:
#   Type: AWS::CloudFormation::Stack
#   Properties:
#     TemplateURL: https://s3.amazonaws.com/stelligent-public/cloudformation-templates/github/labs/codepipeline/codedeploy-deployment.json
#     TimeoutInMinutes: '60'
#     Parameters:
#       # RoleArn:
#       # RoFn::GetAtt:
#       # Ro- CodeDeployEC2InstancesStack
#       # Ro- Outputs.CodeDeployTrustRoleARN
#       Bucket:
#         Ref: ArtifactStoreBucket
#       Key:
#         Ref: stack.yaml
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      Policies:
        - PolicyName: pipeline
          PolicyDocument:
            # TODO: this policy document should probably grant fewer permissions
            Version: '2012-10-17'
            Statement:
            - Action:
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:GetBucketVersioning
              Resource: "*"
              Effect: Allow
            - Action:
              - s3:PutObject
              Resource:
              - arn:aws:s3:::codepipeline*
              - arn:aws:s3:::elasticbeanstalk*
              Effect: Allow
            - Action:
              - codecommit:CancelUploadArchive
              - codecommit:GetBranch
              - codecommit:GetCommit
              - codecommit:GetUploadArchiveStatus
              - codecommit:UploadArchive
              Resource: "*"
              Effect: Allow
            - Action:
              - codedeploy:CreateDeployment
              - codedeploy:GetApplicationRevision
              - codedeploy:GetDeployment
              - codedeploy:GetDeploymentConfig
              - codedeploy:RegisterApplicationRevision
              Resource: "*"
              Effect: Allow
            - Action:
              - elasticbeanstalk:*
              - ec2:*
              - elasticloadbalancing:*
              - autoscaling:*
              - cloudwatch:*
              - s3:*
              - sns:*
              - cloudformation:*
              - rds:*
              - sqs:*
              - ecs:*
              - iam:PassRole
              Resource: "*"
              Effect: Allow
            - Action:
              - lambda:InvokeFunction
              - lambda:ListFunctions
              Resource: "*"
              Effect: Allow
            - Action:
              - opsworks:CreateDeployment
              - opsworks:DescribeApps
              - opsworks:DescribeCommands
              - opsworks:DescribeDeployments
              - opsworks:DescribeInstances
              - opsworks:DescribeStacks
              - opsworks:UpdateApp
              - opsworks:UpdateStack
              Resource: "*"
              Effect: Allow
            - Action:
              - cloudformation:CreateStack
              - cloudformation:DeleteStack
              - cloudformation:DescribeStacks
              - cloudformation:UpdateStack
              - cloudformation:CreateChangeSet
              - cloudformation:DeleteChangeSet
              - cloudformation:DescribeChangeSet
              - cloudformation:ExecuteChangeSet
              - cloudformation:SetStackPolicy
              - cloudformation:ValidateTemplate
              - iam:PassRole
              Resource: "*"
              Effect: Allow
            - Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              Resource: "*"
              Effect: Allow
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
          Action:
          - sts:AssumeRole
  AppPipeline:
    DependsOn:
    - PipelineRole
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn:
        Fn::GetAtt:
        - PipelineRole
        - Arn
      ArtifactStore:
        Type: S3
        Location:
          Ref: ArtifactStoreBucket
      Stages:
      - Name: Source
        Actions:
        - InputArtifacts: []
          Name: Source
          ActionTypeId:
            Category: Source
            Owner: ThirdParty
            Version: '1'
            Provider: GitHub
          OutputArtifacts:
          - Name:
              Ref: SourceOutputArtifacts
          Configuration:
            Owner:
              Ref: GitHubUser
            Repo:
              Ref: Repo
            Branch:
              Ref: Branch
            OAuthToken:
              Ref: GitHubToken
          RunOrder: 1
      - Name: Build
        Actions:
        - Name: Build
          ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: '1'
          OutputArtifacts:
          - Name: wort_build
          InputArtifacts:
          - Name:
              Ref: SourceOutputArtifacts
          Configuration:
            ProjectName: wort
          RunOrder: 1
# TODO: deploy said stack in pipeline
#     - Name: Production
#       Actions:
#       - Name: PromoteEnvironment
#         ActionTypeId:
#           Category: Deploy
#           Owner: AWS
#           Version: '1'
#           Provider: CloudFormation
#         InputArtifacts:
#         - Name: wort_build
#         OutputArtifacts: []
#         Configuration:
#           ProjectName: drom-promote-env
#         RunOrder: 1
#     ArtifactStore:
#       Type: S3
#       Location:
#         Ref: ArtifactStoreBucket
Outputs:
  CodePipelineURL:
    Value:
      Fn::Join:
      - ''
      - - https://console.aws.amazon.com/codepipeline/home?region=
        - Ref: AWS::Region
        - "#/view/"
        - Ref: AppPipeline

